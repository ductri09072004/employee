@{
    ViewData["Title"] = "QL Danh mục";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
}

<style>
    .menu-management-container {
        background-color: #f9f9f9;
    }

    .top-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .filter-button {
        background: none;
        border: none;
        color: #007bff;
        font-size: 16px;
        cursor: pointer;
        padding: 0;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .filter-button:hover {
        text-decoration: underline;
    }

    .filter-icon {
        font-size: 18px;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .action-btn {
        background: none;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 8px 15px;
        cursor: pointer;
        font-size: 14px;
        color: #007bff;
        font-weight: bold;
        transition: background-color 0.2s, border-color 0.2s;
    }

    .action-btn:hover {
        background-color: #e9ecef;
        border-color: #c0c0c0;
    }

    .action-btn.primary {
        background-color: #007bff;
        color: #fff;
        border-color: #007bff;
    }

    .action-btn.primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    .menu-table-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        overflow: hidden;
        margin-bottom: 20px;
    }

    .menu-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

    .menu-table th,
    .menu-table td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #eee;
        vertical-align: top; /* Align content to the top */
    }

    .menu-table th {
        background-color: #f8f8f8;
        color: #555;
        font-weight: bold;
    }

    .menu-table tbody tr:last-child td {
        border-bottom: none;
    }

    .menu-image {
        width: 60px;
        height: 60px;
        border-radius: 4px;
        object-fit: cover;
    }

    .topping-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .topping-list li {
        margin-bottom: 3px;
    }

    .status-text.sold-out {
        color: #EB455F; /* Red color */
        font-weight: bold;
    }

    .status-text.in-stock {
        color: #28a745; /* Green color */
        font-weight: bold;
    }

    .menu-action-link {
        color: #007bff;
        text-decoration: none;
        margin-right: 10px; /* Space between links */
    }

    .menu-action-link.delete {
        color: #dc3545;
    }

    .menu-action-link:hover {
        text-decoration: underline;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0; top: 0; width: 100%; height: 100%;
        overflow: auto; background: rgba(0,0,0,0.3);
    }
    .modal-content {
        background: #fff; margin: 8% auto; padding: 32px 32px 24px 32px; border-radius: 14px;
        width: 300px; box-shadow: 0 4px 24px rgba(0,0,0,0.18);
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .close-modal {
        position: absolute; right: 18px; top: 12px; font-size: 26px; color: #bbb; cursor: pointer;
        transition: color 0.2s;
    }
    .close-modal:hover {
        color: #e74c3c;
    }
    .modal-title {
        font-size: 22px;
        font-weight: 700;
        color: #007bff;
        margin-bottom: 18px;
        text-align: center;
    }
    .modal-form-group {
        width: 100%;
        margin-bottom: 18px;
        display: flex;
        flex-direction: row;
        align-items: center;
    }
    .modal-form-group label {
        font-size: 14px;
        color: #333;
        margin-bottom: 0;
        font-weight: 500;
        margin-right: 14px;
        min-width: 80px;
        text-align: right;
    }
    #categoryNameInput {
        width: 100%; padding: 10px; margin: 0; border: 1.5px solid #e9ecef; border-radius: 7px; font-size: 15px;
        transition: border 0.2s;
    }
    #categoryNameInput:focus {
        border: 1.5px solid #007bff;
        outline: none;
    }
    #confirmAddCategoryBtn {
        background: linear-gradient(90deg, #007bff 60%, #0056b3 100%); color: #fff; border: none; border-radius: 7px; padding: 10px 32px; font-size: 15px; cursor: pointer; font-weight: 600; letter-spacing: 0.5px; box-shadow: 0 2px 8px rgba(0,123,255,0.08);
        margin-top: 8px;
        transition: background 0.2s, box-shadow 0.2s;
        width: 100%;
    }
    #confirmAddCategoryBtn:hover {
        background: linear-gradient(90deg, #0056b3 60%, #007bff 100%);
        box-shadow: 0 4px 16px rgba(0,123,255,0.13);
    }
</style>

<div class="menu-management-container" style="display: flex; flex-direction: column; min-height: 95vh;">
    <div class="top-actions">
        <button class="filter-button">
            <span class="filter-icon">+</span> Thêm bộ lọc
        </button>
        <div class="action-buttons">
            <button class="action-btn primary" id="openAddCategoryModal">
                + Thêm danh mục
            </button>
        </div>
    </div>

    <div class="menu-table-container" style="flex: 1 0 auto;">
        @await Component.InvokeAsync("Table", new { 
            columnNames = new List<string> { "STT", "Mã Danh mục", "Tên Danh mục", "Hành động"}, 
            tableBodyId = "categories-table-body" 
        })
    </div>

    <div style="flex-shrink: 0;">
        @await Component.InvokeAsync("Pagination", new Components.Model.Pagination.PaginationComponentModel {
            CurrentPage = 1,
            TotalPages = 1,
            TotalItems = 1,
            ItemsPerPage = 15,
            PageAction = "onCategoriesPageChange"
        })
    </div>
</div>

<!-- Popup modal thêm danh mục -->
<div id="add-category-modal" class="modal" style="display:none;">
    <div class="modal-content" style="max-width:400px;">
        <span class="close-modal" id="closeAddCategoryModal">&times;</span>
        <h2 class="modal-title">Thêm danh mục mới</h2>
        <div class="modal-form-group">
            <label for="categoryNameInput">Tên danh mục</label>
            <input type="text" id="categoryNameInput" placeholder="Nhập tên danh mục..." />
        </div>
        <button id="confirmAddCategoryBtn">Thêm</button>
    </div>
</div>

@section Scripts {
    <script src="~/js/logic/categories.js"></script>
}
