@{
    ViewData["Title"] = "History";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
}

<style>
    .history-container {
        background-color: #f8f9fa;
        min-height: 100%;
        display: flex;
        flex-direction: column;
    }

    .filter-button-container {
        margin-bottom: 20px;
        background-color: #fff;
        padding: 12px;
    }

    .filter-button {
        background: none;
        border: none;
        color: #4267B2;
        font-size: 12px;
        cursor: pointer;
        padding: 0;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .filter-button:hover {
        color: #3498db;
    }

    .filter-icon {
        font-size: 12px;
    }

    .history-table-container {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        margin-bottom: 20px;
        flex: 1;
    }

    .history-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 12px;
    }

    .history-table th,
    .history-table td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #e9ecef;
    }

    .history-table th {
        background-color: #fff;
        color: #696969;
        font-weight: 700;
        font-size: 14px;
    }

    .history-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .history-table tbody tr:last-child td {
        border-bottom: none;
    }

    .history-table .status-approved {
        color: #27ae60;
        font-weight: 600;
    }

    .history-table .action-link {
        color: #3498db;
        text-decoration: none;
        font-weight: 500;
    }

    .history-table .action-link:hover {
        color: #2980b9;
        text-decoration: underline;
    }

    /* Status colors */
    .status-completed {
        color: #27ae60;
        font-weight: 600;
    }

    .status-pending {
        color: #f39c12;
        font-weight: 600;
    }

    .status-cancelled {
        color: #e74c3c;
        font-weight: 600;
    }

    /* CSS cho nút reset dữ liệu */
    .top-actions {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        margin-bottom: 20px;
    }

    .reset-button {
        background-color: #007bff;
        color: #fff;
        border: 1px solid #007bff;
        border-radius: 4px;
        padding: 8px 15px;
        cursor: pointer;
        font-size: 14px;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 5px;
        transition: background-color 0.2s, border-color 0.2s;
    }

    .reset-button:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    .reset-icon {
        font-size: 14px;
    }

    .reset-button img {
        width: 16px;
        height: 16px;
        filter: brightness(0) invert(1);
    }
</style>

<div class="history-container">
    <div class="top-actions">
        <button class="reset-button" onclick="window.refreshOrderHistory()">
            <img src="~/svg/icon_action/reset.svg" alt="Reset" width="16" height="16">
        </button>
    </div>

    <div class="history-table-container">
        <!-- Components table  -->
           @await Component.InvokeAsync("Table", new { 
            columnNames = new List<string> { "STT", "Mã đơn", "Bàn số",
                "Giờ đặt", "Tổng tiền", "PT thanh toán", "Trạng thái",
                 "Chi tiết đơn" 
                }, 
            tableBodyId = "orderHistoryBody" 
        })
    </div>

    @await Component.InvokeAsync("Pagination", new Components.Model.Pagination.PaginationComponentModel {
        CurrentPage = 1,
        TotalPages = 1,
        TotalItems = 1,
        ItemsPerPage = 15,
        PageAction = "onHistoryPageChange"
    })
</div>

@section Scripts {
    <script src="~/js/logic/history.js"></script>
}
