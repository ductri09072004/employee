@{
    ViewData["Title"] = "QL Table";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
}

<style>
    .table-management-container {
        background-color: #f8f9fa;
        min-height: 100%;
        display: flex;
        flex-direction: column;
    }

    .add-table-button-container {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .add-table-button {
        background-color: #007bff;
        color: #fff;
        border: 1px solid #007bff;
        border-radius: 4px;
        padding: 8px 15px;
        cursor: pointer;
        font-size: 14px;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 5px;
        transition: background-color 0.2s, border-color 0.2s;
    }

    .add-table-button:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    .add-icon {
        font-size: 14px;
    }

    /* CSS cho nút reset */
    .reset-table-button {
        background: #007bff;
        color: #fff;
        border: none;
        border-radius: 6px;
        padding: 8px 12px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .reset-table-button:hover {
        background: #0056b3;
    }

    .reset-table-button img {
        width: 16px;
        height: 16px;
        filter: brightness(0) invert(1);
    }

    .table-list-container {
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 20px;
        flex: 1;
    }

    .table-list {
        width: 100%;
        border-collapse: collapse;
        font-size: 12px;
        color: #696969;
    }

    .table-list th,
    .table-list td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #e9ecef;
    }

    .table-list th {
        background-color: #fff;
        color: #696969;
        font-weight: 700;
        font-size: 14px;
    }

    .table-list tbody tr:hover {
        background-color: #f8f9fa;
    }

    .table-list tbody tr:last-child td {
        border-bottom: none;
    }

    .table-list td a {
        color: #696969;
        text-decoration: none;
    }

    .table-list td a:hover {
        text-decoration: underline;
    }

    .table-list .action-link {
        color: #4267B2;
        text-decoration: none;
        margin-right: 10px;
    }

    .table-list .action-link.delete {
        color: #B24242;
    }

    .table-list .action-link.upload {
        color: #137018;
    }

    .table-list .action-link.download-pdf {
        color: #28a745;
    }

    .table-list .action-link:hover {
        text-decoration: underline;
    }

    /* Modal popup thêm bàn */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0; top: 0; width: 100%; height: 100%;
        overflow: auto; background: rgba(0,0,0,0.3);
    }
    .modal-content {
        background: #fff; margin: 8% auto; padding: 32px 32px 24px 32px; border-radius: 14px;
        width: 300px; box-shadow: 0 4px 24px rgba(0,0,0,0.18);
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .close-modal {
        position: absolute; right: 18px; top: 12px; font-size: 26px; color: #bbb; cursor: pointer;
        transition: color 0.2s;
    }
    .close-modal:hover {
        color: #e74c3c;
    }
    .modal-title {
        font-size: 22px;
        font-weight: 700;
        color: #4267B2;
        margin-bottom: 18px;
        text-align: center;
    }
    .modal-form-group {
        width: 100%;
        margin-bottom: 18px;
        display: flex;
        flex-direction: row;
        align-items: center;
    }
    .modal-form-group label {
        font-size: 14px;
        color: #333;
        margin-bottom: 0;
        font-weight: 500;
        margin-right: 14px;
        min-width: 60px;
        text-align: right;
    }
    #tableNumberInput {
        width: 100%; padding: 10px; margin: 0; border: 1.5px solid #e9ecef; border-radius: 7px; font-size: 15px;
        transition: border 0.2s;
    }
    #tableNumberInput:focus {
        border: 1.5px solid #4267B2;
        outline: none;
    }
    #confirmAddTableBtn {
        background: linear-gradient(90deg, #4267B2 60%, #3498db 100%); color: #fff; border: none; border-radius: 7px; padding: 10px 32px; font-size: 15px; cursor: pointer; font-weight: 600; letter-spacing: 0.5px; box-shadow: 0 2px 8px rgba(66,103,178,0.08);
        margin-top: 8px;
        transition: background 0.2s, box-shadow 0.2s;
        width: 100%;
    }
    #confirmAddTableBtn:hover {
        background: linear-gradient(90deg, #3498db 60%, #4267B2 100%);
        box-shadow: 0 4px 16px rgba(66,103,178,0.13);
    }

    /* Popup modal xác nhận xóa bàn */
    #delete-table-modal .modal-content {
        border: 2px solid #B24242;
        box-shadow: 0 4px 24px rgba(178,66,66,0.13);
    }
    #confirmDeleteTableBtn:hover {
        background: #e74c3c;
    }
    #cancelDeleteTableBtn:hover {
        background: #d0d7de;
    }


</style>

<div class="table-management-container" style="display: flex; flex-direction: column; min-height: 95vh;">
    <div class="add-table-button-container">
        <button class="add-table-button" id="openAddTableModal">
            <span class="add-icon">+</span> Thêm bàn
        </button>
        <button class="reset-table-button" id="refreshBtn" onclick="window.refreshTableData()">
            <img src="~/svg/icon_action/reset.svg" alt="Reset" width="16" height="16">
        </button>
    </div>

    <!-- Popup modal thêm bàn -->
    <div id="add-table-modal" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close-modal" id="closeAddTableModal">&times;</span>
            <h2 class="modal-title">Thêm bàn mới</h2>
            <div class="modal-form-group">
                <label for="tableNumberInput">Số bàn</label>
                <input type="text" id="tableNumberInput" placeholder="Nhập số bàn..." />
            </div>
            <button id="confirmAddTableBtn">Thêm</button>
        </div>
    </div>

    <!-- Popup modal xác nhận xóa bàn -->
    <div id="delete-table-modal" class="modal" style="display:none;">
        <div class="modal-content" style="max-width:340px;">
            <span class="close-modal" id="closeDeleteTableModal">&times;</span>
            <h2 class="modal-title" style="color:#B24242;">Xác nhận xóa bàn</h2>
            <div style="margin: 18px 0 24px 0; text-align:center; color:#333; font-size:15px;">Bạn có chắc chắn muốn xóa bàn này không?</div>
            <div style="display:flex; gap:12px; width:100%; justify-content:center;">
                <button id="cancelDeleteTableBtn" style="background:#e9ecef; color:#333; border:none; border-radius:7px; padding:10px 24px; font-size:15px; cursor:pointer; font-weight:500;">Hủy</button>
                <button id="confirmDeleteTableBtn" style="background:#B24242; color:#fff; border:none; border-radius:7px; padding:10px 24px; font-size:15px; cursor:pointer; font-weight:600;">Xóa</button>
            </div>
        </div>
    </div>

    <!-- Popup modal hiển thị QR code -->
    <div id="show-qr-modal" class="modal" style="display:none;">
        <div class="modal-content" style="max-width:340px;">
            <span class="close-modal" id="closeShowQRModal">&times;</span>
            <h2 class="modal-title" style="color:#4267B2;">Mã QR bàn</h2>
            <div id="qrCodeContainer" style="display:flex; justify-content:center; margin:18px 0;"></div>
            <div id="qrUrlText" style="text-align:center; font-size:13px; color:#888; word-break:break-all;"></div>
        </div>
    </div>

@* Components table *@
    <div class="table-list-container" style="flex: 1 0 auto;">   
         @await Component.InvokeAsync("Table", new { 
            columnNames = new List<string> { "STT", "Bàn số", "QR Code", "Hành Động" }, 
            tableBodyId = "table-list-body" 
        })
    </div>
    
    <div style="flex-shrink: 0;">
        @await Component.InvokeAsync("Pagination", new Components.Model.Pagination.PaginationComponentModel {
            CurrentPage = 1,
            TotalPages = 1,
            TotalItems = 1,
            ItemsPerPage = 15,
            PageAction = "onTablePageChange"
        })
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <script src="~/js/logic/table.js"></script>
}

