<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Quản lý</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Lato', sans-serif;
            display: flex;
            justify-content: center;
            min-height: 100vh;
            overflow-x: hidden;
            background-color: #F9F9F9;
        }

        .container {
            display: flex;
            width: 100%;
            max-width: 1600px;
            height: 100vh;
            overflow-y: auto;
            /* Hide scrollbar for Chrome, Safari and Opera */
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;  /* Firefox */
        }

        .container::-webkit-scrollbar {
            display: none;
        }

        .sidebar {
            width: 250px;
            min-width: 250px;
            background-color: #FFFFFF;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .user-info {
            padding: 24px 16px 16px 32px;
            display: flex;
            flex-direction: column;
            gap: 12px;
            margin-bottom: 8px;
        }


        .nav-menu {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            gap: 16px;
            padding-top: 16px;
        }

        .nav-item,
        .nav-item-res {
            display: flex;
            padding: 12px 16px 12px 32px;
            gap: 12px;
            color: #696969;
            text-decoration: none;
            font-weight: 400;
            cursor: pointer;
        }

        .nav-item:hover,
        .nav-item-res:hover {
            background-color: #F9FAFF;
        }

        .nav-item.active,
        .nav-item-res.active {
            background-color: #F9FAFF;
            border-right: 1px solid #EB455F;
        }

        .logout-btn {
            margin-top: auto;
            padding: 8px 16px;
        }

        .logout-btn button {
            width: 100%;
            padding: 10px;
            background-color: #EB455F;
            color: #fff;
            border: none;
            border-radius: 6px;
            font-weight: bold;
            cursor: pointer;
        }

        .logout-btn button:hover {
            background-color: #c82333;
        }

        .main-content {
            flex-grow: 1;
            overflow-y: auto;
            background-color: #fff;
            margin: 24px;
            border-radius: 6px;
            /* Hide scrollbar for Chrome, Safari and Opera */
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;  /* Firefox */
        }

        .main-content::-webkit-scrollbar {
            display: none;
        }

        .name {
            font-size: 14px;
            font-weight: 700;
            color: #4A4A4A;
        }

        .role{
            font-size: 12px;
            font-weight: 400;
            color: #696969;
        }

        .icon-placeholder {
            width: 16px;  
            height: 16px;
            display: inline-block;
        }

         .down-icon {
            position: absolute;
            right: 16px; 
            margin-left: auto;
            transition: transform 0.3s ease;
        }

        .down-icon.rotate {
            transform: rotate(180deg);
        }

        .submenu {
            display: none;
            flex-direction: column;
            gap: 16px;
        }

        .submenu.show {
            display: flex;
        }

        /* Mobile styles */
        .hamburger-menu {
            display: none; /* Hidden by default, shown on mobile */
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 1001; /* Above sidebar */
            background-color: #EB455F;
            color: #fff;
            border: none;
            border-radius: 6px;
            padding: 5px;
            cursor: pointer;
            font-size: 24px;
            line-height: 1;
        }

        .overlay {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999; /* Below sidebar, above main content */
        }

        .overlay.show {
            display: block;
        }

        @@media (max-width: 768px) {
            body {
                display: block; /* Allow normal flow for mobile */
                overflow-y: auto; /* Allow body to scroll on mobile */
                min-height: auto; /* Reset min-height */
            }

            .container {
                flex-direction: column; /* Stack sidebar and main content */
                height: auto; /* Allow content to define height */
                max-width: 100%; /* Use full width */
                overflow-y: visible; /* Let the body handle overall scroll */
                margin: 0;
            }

            .sidebar {
                position: fixed; /* Fixed position for off-canvas effect */
                top: 0;
                left: 0;
                height: 100vh;
                transform: translateX(-100%); /* Hide sidebar off-screen */
                transition: transform 0.3s ease-in-out;
                z-index: 1000; /* Ensure sidebar is above main content */
                box-shadow: 2px 0 5px rgba(0,0,0,0.2);
                margin: 0; /* Remove margin */
            }

            .sidebar.active {
                transform: translateX(0%); /* Show sidebar */
            }

            .main-content {
                margin: 0; /* Remove margin from main-content */
                padding: 20px; /* Adjust padding for mobile */
                border-radius: 0; /* Remove border-radius if not needed */
                width: 100%; /* Take full width */
                overflow-y: auto; /* Keep scroll for main content if it overflows */
                min-height: calc(100vh - 60px); /* Adjust based on header/footer if any */
            }

            .hamburger-menu {
                display: block; /* Show hamburger menu on mobile */
            }
        }
    </style>
</head>
<body>
    <button class="hamburger-menu" id="hamburgerMenu">
        &#9776; <!-- Hamburger icon -->
    </button>

    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="user-info">
                <p class="name" id="userName">Đang tải...</p>
                <p class="role">Quản trị viên</p>
            </div>

            <div class="nav-menu">
                <a asp-controller="Home" asp-action="Index" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                    <img src="~/svg/sidebar/home_icon.svg" alt="icon" class="icon" />
                    Tổng quan
                </a>
                <a asp-controller="Home" asp-action="QL_Order" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "QL_Order" ? "active" : "")">
                    <img src="~/svg/sidebar/ql_order.svg" alt="icon" class="icon" />
                    Quản lý đơn gọi món
                </a>
                <a asp-controller="Home" asp-action="History" class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "History" ? "active" : "")">
                    <img src="~/svg/sidebar/his_icon.svg" alt="icon" class="icon" />
                    Lịch sử đơn
                </a>

                <div class="nav-item" id="restaurantMenu">
                    <img src="~/svg/sidebar/ql_restaurant.svg" alt="icon" class="icon" />
                    Quản lý nhà hàng
                    <img src="~/svg/sidebar/down_icon.svg" alt="icon" class="icon down-icon" />
                </div>
                <div class="submenu" id="restaurantSubmenu">
                    <a asp-controller="Home" asp-action="QL_Table" class="nav-item-res @(ViewContext.RouteData.Values["Action"].ToString() == "QL_Table" ? "active" : "")">
                        <span class="icon-placeholder"></span>
                        Quản lý bàn
                    </a>
                    <a asp-controller="Home" asp-action="QL_Menu" class="nav-item-res @(ViewContext.RouteData.Values["Action"].ToString() == "QL_Menu" ? "active" : "")">
                        <span class="icon-placeholder"></span>
                        Quản lý thực đơn
                    </a>
                    <a asp-controller="Home" asp-action="QL_Topping" class="nav-item-res @(ViewContext.RouteData.Values["Action"].ToString() == "QL_Topping" ? "active" : "")">
                        <span class="icon-placeholder"></span>
                        Quản lý topping kèm
                    </a>
                </div>

                <a asp-controller="Home" asp-action="Setting" class="nav-item-res @(ViewContext.RouteData.Values["Action"].ToString() == "Setting" ? "active" : "")">
                    <img src="~/svg/sidebar/setting_icon.svg" alt="icon" class="icon" />
                    Cài đặt
                </a>
            </div>
            
            <div class="logout-btn">
                <button onclick="handleLogout()">Đăng xuất</button>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            @RenderBody()
        </div>
    </div>

    <div class="overlay" id="overlay"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sidebar = document.getElementById('sidebar');
            const hamburgerMenu = document.getElementById('hamburgerMenu');
            const overlay = document.getElementById('overlay');
            const navItems = document.querySelectorAll('.nav-menu .nav-item, .nav-menu .nav-item-res');

            const restaurantMenu = document.getElementById('restaurantMenu');
            const restaurantSubmenu = document.getElementById('restaurantSubmenu');
            const downIcon = restaurantMenu.querySelector('.down-icon');

            // Kiểm tra nếu đang ở một trong các trang con
            const currentAction = '@ViewContext.RouteData.Values["Action"]';
            if (['QL_Table', 'QL_Menu', 'QL_Topping'].includes(currentAction)) {
                restaurantSubmenu.classList.add('show');
                downIcon.classList.add('rotate');
            }

            restaurantMenu.addEventListener('click', function() {
                restaurantSubmenu.classList.toggle('show');
                downIcon.classList.toggle('rotate');
            });

            // Mobile menu toggle
            hamburgerMenu.addEventListener('click', function() {
                sidebar.classList.toggle('active');
                overlay.classList.toggle('show');
                // Hide hamburger menu when sidebar is active
                hamburgerMenu.style.display = 'none';
            });

            overlay.addEventListener('click', function() {
                sidebar.classList.remove('active');
                overlay.classList.remove('show');
                // Show hamburger menu when sidebar is closed
                hamburgerMenu.style.display = 'block';
            });

            // Close sidebar when a navigation item is clicked (only on small screens)
            navItems.forEach(item => {
                item.addEventListener('click', function() {
                    if (window.innerWidth <= 768) {
                        sidebar.classList.remove('active');
                        overlay.classList.remove('show');
                        // Show hamburger menu when sidebar is closed by clicking nav item
                        hamburgerMenu.style.display = 'block';
                    }
                });
            });

            // Lấy thông tin user từ localStorage và hiển thị tên
            const userStr = localStorage.getItem('user');
            if (userStr) {
                try {
                    const user = JSON.parse(userStr);
                    document.getElementById('userName').textContent = user.name || 'Không có tên';
                } catch (error) {
                    console.error('Lỗi khi parse user data:', error);
                    document.getElementById('userName').textContent = 'Không có tên';
                }
            } else {
                document.getElementById('userName').textContent = 'Chưa đăng nhập';
            }
        });

        function handleLogout() {
            // Xóa thông tin user trong localStorage
            localStorage.removeItem('user');
            
            // Gọi API đăng xuất để xóa session
            fetch('/Auth/Logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => {
                if (response.ok) {
                    // Chuyển hướng về trang đăng nhập
                    window.location.href = '/Auth/Login';
                }
            }).catch(error => {
                console.error('Lỗi khi đăng xuất:', error);
            });
        }
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/api_service/order.service.js"></script>
    <script src="~/js/api_service/table.service.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
