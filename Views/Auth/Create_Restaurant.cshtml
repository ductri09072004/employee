@{
    Layout = "~/Views/Shared/Auth_Layout.cshtml";
    ViewData["Title"] = "Register restaurant";
}

<style>
    .input-clean {
        width: 100%;
        border-radius: 6px;
        padding: 6px 16px;
        border: 1px solid #CBCBCB;
        box-shadow: none;
        outline: none;
        color: #000;
    }

    .input-clean::placeholder {
        color: #CBCBCB;
        opacity: 1;
    }

    .btn-submit {
        width: 100%;
        border-radius: 6px;
        padding: 10px;
        color: #fff;
        background-color: #EB455F;
        border: none;
        font-size: 16px;
        font-weight: 700;
    }

    .error-message {
        color: #EB455F;
        font-size: 14px;
        margin-top: 5px;
        display: none;
    }

    .staff-info {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid #dee2e6;
    }

    .staff-info h3 {
        color: #EB455F;
        font-size: 16px;
        margin-bottom: 10px;
    }

    .staff-info p {
        margin: 5px 0;
        color: #4A4A4A;
        font-size: 14px;
    }
</style>

<!-- Tiêu đề -->
<div style="display: flex; flex-direction: column; align-items: center; gap: 6px; margin-top: 20px;">
    <p style="color: #EB455F; font-weight: 700; font-size: 20px; margin: 0;">Đăng ký nhà hàng</p>
    <p style="color: #4A4A4A; font-weight: 400; font-size: 12px; margin: 0;">Tinh hoa ẩm thực – Phục vụ hoàn hảo</p>
    @* <div class="info-staff">
        <p>Id_staff: <span id="displayIdStaff"></span></p>
        <p>Id_restaurant: <span id="displayIdRestaurant"></span></p>
    </div> *@
</div>

<!-- Thông tin nhân viên -->
<div id="staffInfoContainer" class="staff-info" style="display: none; margin-top: 20px; max-width: 400px; width: 100%; margin-left: auto; margin-right: auto;">
    <h3>Thông tin nhân viên</h3>
    <p><strong>Họ và tên:</strong> <span id="staffName"></span></p>
    <p><strong>Số điện thoại:</strong> <span id="staffPhone"></span></p>
</div>

<form id="restaurantForm" style="margin-top: 20px; max-width: 400px; width: 100%; margin-left: auto; margin-right: auto;">
    <!-- Tên nhà hàng -->
    <div class="form-group" style="margin-bottom: 15px;">
        <p style="margin-bottom: 5px; font-size: 14px;">Tên nhà hàng</p>
        <input type="text" id="restaurantName" placeholder="Tên nhà hàng" class="input-clean" style="width: 100%; box-sizing: border-box;" />
        <div id="restaurantNameError" class="error-message"></div>
    </div>

    <!-- Địa chỉ -->
    <div style="display: flex; gap: 10px; margin-bottom: 15px; width: 100%; box-sizing: border-box;">
        <div style="flex: 1; min-width: 0;">
            <p style="margin-bottom: 5px; font-size: 14px;">Tỉnh / Thành</p>
            <select id="province" class="input-clean" style="width: 100%; box-sizing: border-box; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                <option value="">Chọn Tỉnh/Thành</option>
            </select>
        </div>
        <div style="flex: 1; min-width: 0;">
            <p style="margin-bottom: 5px; font-size: 14px;">Quận / Huyện</p>
            <select id="district" class="input-clean" style="width: 100%; box-sizing: border-box; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                <option value="">Chọn Quận/Huyện</option>
            </select>
        </div>
        <div style="flex: 1; min-width: 0;">
            <p style="margin-bottom: 5px; font-size: 14px;">Phường / Xã</p>
            <select id="ward" class="input-clean" style="width: 100%; box-sizing: border-box; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                <option value="">Chọn Phường/Xã</option>
            </select>
        </div>
    </div>
    <div id="provinceError" class="error-message"></div>
    <div id="districtError" class="error-message"></div>
    <div id="wardError" class="error-message"></div>

    <!-- Số nhà & Tên đường -->
    <div class="form-group" style="margin-bottom: 15px;">
        <p style="margin-bottom: 5px;">Số nhà & Tên đường</p>
        <input type="text" id="streetName" placeholder="số nhà, đường" class="input-clean" style="width: 100%; box-sizing: border-box;" />
        <div id="streetNameError" class="error-message"></div>
    </div>

    <!-- Mã số thuế -->
    <div class="form-group" style="position: relative; margin-bottom: 20px;">
        <p style="margin-bottom: 5px;">Mã số thuế</p>
        <div style="position: relative; display: flex; align-items: center;">
            <input type="text" id="taxCode" placeholder="03xxx" class="input-clean" style="width: 100%; box-sizing: border-box;" />
        </div>
        <div id="taxCodeError" class="error-message"></div>
    </div>

    <!-- Nút -->
    <button type="submit" class="btn-submit" style="width: 100%; border-radius: 8px;">Tạo Restaurant</button>
      @* <button type="submit" class="btn-submit" style="width: 100%; border-radius: 8px;">Tạo Staff</button> *@
    <p style="margin-bottom: 60px; color: #000;">
        <a asp-action="Create_Staff" style="color: #000; text-decoration: underline;">
            Quay về bước trước
        </a>
    </p>
    
</form>

@section Scripts {
    <script src="~/js/config/api.config.js"></script>
    <script src="~/js/api_service/restaurant.service.js"></script>
    <script src="~/js/api_service/auth.service.js"></script>
    <script>
        // Biến lưu trữ dữ liệu
        let provinces = [];
        let districts = [];
        let wards = [];

        // Hàm fetch dữ liệu từ API
        async function fetchProvinces() {
            try {
                const response = await fetch('https://provinces.open-api.vn/api/?depth=3');
                provinces = await response.json();
                renderProvinces();
            } catch (error) {
                console.error('Error fetching provinces:', error);
            }
        }

        // Hàm render danh sách tỉnh/thành
        function renderProvinces() {
            const provinceSelect = document.getElementById('province');
            provinceSelect.innerHTML = '<option value="">Chọn Tỉnh/Thành</option>';
            
            provinces.forEach(province => {
                const option = document.createElement('option');
                option.value = province.code;
                option.textContent = province.name;
                provinceSelect.appendChild(option);
            });
        }

        // Hàm render danh sách quận/huyện
        function renderDistricts(provinceCode) {
            const districtSelect = document.getElementById('district');
            districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';
            
            const province = provinces.find(p => p.code === parseInt(provinceCode));
            if (province) {
                districts = province.districts;
                districts.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district.code;
                    option.textContent = district.name;
                    districtSelect.appendChild(option);
                });
            }
        }

        // Hàm render danh sách phường/xã
        function renderWards(districtCode) {
            const wardSelect = document.getElementById('ward');
            wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
            
            const district = districts.find(d => d.code === parseInt(districtCode));
            if (district) {
                wards = district.wards;
                wards.forEach(ward => {
                    const option = document.createElement('option');
                    option.value = ward.code;
                    option.textContent = ward.name;
                    wardSelect.appendChild(option);
                });
            }
        }

        // Event listeners
        document.getElementById('province').addEventListener('change', function() {
            renderDistricts(this.value);
            document.getElementById('ward').innerHTML = '<option value="">Chọn Phường/Xã</option>';
        });

        document.getElementById('district').addEventListener('change', function() {
            renderWards(this.value);
        });

        // Handle form submission
        document.getElementById('restaurantForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Validate form
            const restaurantName = document.getElementById('restaurantName').value;
            const province = document.getElementById('province').value;
            const district = document.getElementById('district').value;
            const ward = document.getElementById('ward').value;
            const taxCode = document.getElementById('taxCode').value;
            
            if (!restaurantName || !province || !district || !ward || !taxCode) {
                alert('Vui lòng điền đầy đủ thông tin');
                return;
            }

            // Construct full address
            const fullAddress = `${ward}, ${district}, ${province}`;
            
            try {
                console.log('Creating restaurant with data:', { restaurantName, fullAddress, taxCode }); // Debug log
                
                // Create restaurant with separate parameters
                const restaurantResponse = await window.restaurantService.create_restaurant(
                    restaurantName,
                    fullAddress,
                    taxCode
                );

                console.log('Restaurant response:', restaurantResponse); // Debug log

                if (restaurantResponse && restaurantResponse.id_restaurant) {
                    console.log('Restaurant created successfully with ID:', restaurantResponse.id_restaurant);
                    
                    // Lưu id_restaurant vào localStorage
                    localStorage.setItem('id_restaurant', restaurantResponse.id_restaurant);
                    
                    // Lấy cả id_staff và id_restaurant từ localStorage
                    const id_staff = localStorage.getItem('id_staff');
                    const id_restaurant = localStorage.getItem('id_restaurant');
                    console.log('Retrieved from localStorage:', { id_staff, id_restaurant }); // Debug log

                    if (id_staff && id_restaurant) {
                        try {
                            // Gọi API add_id_restaurant với cả hai ID từ localStorage
                            console.log('Calling add_id_restaurant API with:', {
                                id_restaurant: id_restaurant,
                                id_staff: id_staff
                            }); // Debug log
                            
                            const addIdResponse = await window.authService.add_id_restaurant(
                                id_restaurant,
                                id_staff
                            );
                            
                            console.log('Raw Add ID response:', addIdResponse); // Debug log
                            console.log('Response type:', typeof addIdResponse);
                            console.log('Response message:', addIdResponse?.message);
                            
                            // Kiểm tra response có message không
                            if (addIdResponse && addIdResponse.message) {
                                console.log('Found message in response:', addIdResponse.message);
                                alert('Tạo restaurant và liên kết staff thành công!');
                                setTimeout(() => {
                                    window.location.replace('/Auth/Login');
                                }, 100);
                            } else {
                                console.log('No message found in response');
                            }
                        } catch (error) {
                            console.error('Error calling add_id_restaurant:', error);
                        }
                    }
                } else {
                    alert('Có lỗi xảy ra khi tạo restaurant');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi tạo restaurant');
            }
        });

        // Hàm hiển thị thông tin staff
        async function displayStaffInfo() {
            try {
                console.log('Fetching staff data...'); // Debug log
                const response = await fetch('/Auth/GetStaffData');
                const staffData = await response.json();
                console.log('Staff data received:', staffData); // Debug log

                if (staffData && staffData.success) {
                    const container = document.getElementById('staffInfoContainer');
                    const staffInfo = staffData.data;
                    console.log('Staff info to display:', staffInfo); // Debug log
                    
                    // Kiểm tra và hiển thị thông tin
                    if (staffInfo) {
                        document.getElementById('staffName').textContent = staffInfo.name || 'Chưa có thông tin';
                        document.getElementById('staffPhone').textContent = staffInfo.phone || 'Chưa có thông tin';
                        container.style.display = 'block';
                        console.log('Staff info displayed successfully'); // Debug log
                    } else {
                        console.log('No staff info found in response');
                        container.style.display = 'none';
                    }
                } else {
                    console.log('Failed to get staff data:', staffData);
                    document.getElementById('staffInfoContainer').style.display = 'none';
                }
            } catch (error) {
                console.error('Error fetching staff data:', error);
                document.getElementById('staffInfoContainer').style.display = 'none';
            }
        }

        // Hiển thị id_staff khi trang được tải
        document.addEventListener('DOMContentLoaded', function() {
            const id_staff = localStorage.getItem('id_staff');
            if (id_staff) {
                document.getElementById('displayIdStaff').textContent = id_staff;
            }
        });

        // Khởi tạo
        fetchProvinces();
        displayStaffInfo(); // Hiển thị thông tin staff khi trang được load
    </script>
}
